{"name":"08.py","path":"08/08.py","content":{"structured":{"description":"","items":[{"id":"c6a7cb9f-6b12-497d-8b67-d40ebb0b47e5","ancestors":[],"type":"function","name":"parse_input","location":{"offset":" ","indent":4,"start":4,"insert":5},"code":"def parse_input(file):\n    lines = open(file,'r').readlines()\n    lines = [x.strip().split(' | ') for x in lines]\n    signals_array = np.array([x[0].split() for x in lines])\n    output_array = np.array([x[1].split() for x in lines])\n    return(signals_array, output_array)","params":[{"name":"file","value":null,"type":null}],"returns":true,"skip":false,"stripped":"lines = open(file,'r').readlines()\n    lines = [x.strip().split(' | ') for x in lines]\n    signals_array = np.array([x[0].split() for x in lines])\n    output_array = np.array([x[1].split() for x in lines])\n    return(signals_array, output_array)","length":6,"comment":{"description":"reads a file and returns two arrays: `signals_array` contains the input signals, while `output_array` contains the corresponding output values.","params":[{"name":"file","type":"open file.","value":null,"description":"file to be parsed and is used to read its contents into the function.\n\n\tFile is an open file handle returned by the `open` function in read mode (`'r'`). The `readlines()` method reads and returns all the lines of the file as a list of strings. Each line is split into two parts using the split() method, and the resulting list of tuples is assigned to the `signals_array` and `output_array` variables.\n\t\n\tTherefore, `file` has the following properties:\n\t\n\t* File name: The name of the file being read.\n\t* Mode: The mode in which the file is opened (read in this case).\n\t* Lines: A list of strings representing all the lines of the file.\n"}],"returns":{"type":"`numpy` array.","description":"a tuple of two arrays: `signals_array` and `output_array`.\n\n\t* `signals_array`: A NumPy array containing the input signals. Each element in the array is a list of two values, where the first value represents the signal name and the second value represents the signal value.\n\t* `output_array`: A NumPy array containing the output values for each signal. Each element in the array is a list of two values, where the first value represents the output name and the second value represents the output value.\n"}}},{"id":"54c1532a-a805-49be-84e4-28d21a5f6cc3","ancestors":[],"type":"function","name":"part_1_sum","location":{"offset":" ","indent":4,"start":11,"insert":12},"code":"def part_1_sum(output_array):\n    output_length_array = np.vectorize(len)(output_array)\n    return(np.sum(np.isin(output_length_array, [2,3,4,7]), axis=(0, 1)))","params":[{"name":"output_array","value":null,"type":null}],"returns":true,"skip":false,"stripped":"output_length_array = np.vectorize(len)(output_array)\n    return(np.sum(np.isin(output_length_array, [2,3,4,7]), axis=(0, 1)))","length":3,"comment":{"description":"computes the sum of elements in an output array that have lengths 2, 3, 4, or 7, along both axis(0) and axis(1).","params":[{"name":"output_array","type":"ndarray.","value":null,"description":"2D array containing the lengths of the parts in the problem.\n\n\t* The type of `output_array` is `np.ndarray`.\n\t* The shape of `output_array` is `(N, M)`, where N and M are the lengths of the two arrays being processed.\n\t* The values in `output_array` are integers between 0 and 8, inclusive.\n\t* The array has a total of 4 unique values: 2, 3, 4, and 7.\n\t* The array is sorted in ascending order.\n"}],"returns":{"type":"int","description":"a tensor of lengths of arrays in the input `output_array`."}}},{"id":"365b1707-d77c-4d7f-af3e-6aac224cd3b4","ancestors":[],"type":"function","name":"build_decoder","location":{"offset":" ","indent":4,"start":15,"insert":16},"code":"def build_decoder(sig_row):\n    \"\"\"\n    Builds the decoder dict for a given (1,10) signals row.\n    This leverages the observation that if I count the number of patterns in which each segment appears\n    (1) in the whole signals row \n    (2) in the signals row where I remove the (easily identifiable) digit 4\n    each of the 7 segments has a unique 'signature'. \n    For example:\n    - segment 'a' is the only one which appears 8 times both with digit 4 included, and with digit 4 excluded.\n    - segment 'b' is the only one which appears 6 times with digit 4 included, and 5 times with digit 4 excluded.\n    - etc.\n    \"\"\"\n    sig_len = np.vectorize(len)(sig_row)\n    decoder = {}\n    count_all = Counter(''.join(sig_row))\n    count_no_4 = Counter(''.join(sig_row[sig_len!=4]))\n    for k in \"abcdefg\":\n        to_match = (count_all[k], count_no_4[k])\n        if to_match == (8, 8):\n            decoder[k] = \"a\"\n        elif to_match == (6, 5):\n            decoder[k] = \"b\"\n        elif to_match == (8, 7):\n            decoder[k] = \"c\"\n        elif to_match == (7, 6):\n            decoder[k] = \"d\"\n        elif to_match == (4, 4):\n            decoder[k] = \"e\"\n        elif to_match == (9, 8):\n            decoder[k] = \"f\"\n        elif to_match == (7, 7):\n            decoder[k] = \"g\"\n    return(decoder)","params":[{"name":"sig_row","value":null,"type":null}],"returns":true,"skip":false,"doc":{"0":32841888,"1":24576,"2":1040,"3":15,"4":8,"5":0,"tree":{"input":"import numpy as np\nfrom collections import Counter\n\ndef parse_input(file):\n    lines = open(file,'r').readlines()\n    lines = [x.strip().split(' | ') for x in lines]\n    signals_array = np.array([x[0].split() for x in lines])\n    output_array = np.array([x[1].split() for x in lines])\n    return(signals_array, output_array)\n\ndef part_1_sum(output_array):\n    output_length_array = np.vectorize(len)(output_array)\n    return(np.sum(np.isin(output_length_array, [2,3,4,7]), axis=(0, 1)))\n\ndef build_decoder(sig_row):\n    \"\"\"\n    Builds the decoder dict for a given (1,10) signals row.\n    This leverages the observation that if I count the number of patterns in which each segment appears\n    (1) in the whole signals row \n    (2) in the signals row where I remove the (easily identifiable) digit 4\n    each of the 7 segments has a unique 'signature'. \n    For example:\n    - segment 'a' is the only one which appears 8 times both with digit 4 included, and with digit 4 excluded.\n    - segment 'b' is the only one which appears 6 times with digit 4 included, and 5 times with digit 4 excluded.\n    - etc.\n    \"\"\"\n    sig_len = np.vectorize(len)(sig_row)\n    decoder = {}\n    count_all = Counter(''.join(sig_row))\n    count_no_4 = Counter(''.join(sig_row[sig_len!=4]))\n    for k in \"abcdefg\":\n        to_match = (count_all[k], count_no_4[k])\n        if to_match == (8, 8):\n            decoder[k] = \"a\"\n        elif to_match == (6, 5):\n            decoder[k] = \"b\"\n        elif to_match == (8, 7):\n            decoder[k] = \"c\"\n        elif to_match == (7, 6):\n            decoder[k] = \"d\"\n        elif to_match == (4, 4):\n            decoder[k] = \"e\"\n        elif to_match == (9, 8):\n            decoder[k] = \"f\"\n        elif to_match == (7, 7):\n            decoder[k] = \"g\"\n    return(decoder)\n\ndef decode(output, decoder):\n    \"\"\"Given the (1,4) input row and the decoder, returns the corresponding row integer.\"\"\"\n    decoded_digits = \"\"\n    for digit in output:\n        decoded_digit_segments = set()\n        for char in digit:\n            decoded_digit_segments.add(decoder[char])\n        if decoded_digit_segments == set(\"abcefg\"):\n            decoded_digits += \"0\"\n        elif decoded_digit_segments == set(\"cf\"):\n            decoded_digits += \"1\"\n        elif decoded_digit_segments == set(\"acdeg\"):\n            decoded_digits += \"2\"\n        elif decoded_digit_segments == set(\"acdfg\"):\n            decoded_digits += \"3\"\n        elif decoded_digit_segments == set(\"bcdf\"):\n            decoded_digits += \"4\"\n        elif decoded_digit_segments == set(\"abdfg\"):\n            decoded_digits += \"5\"\n        elif decoded_digit_segments == set(\"abdefg\"):\n            decoded_digits += \"6\"\n        elif decoded_digit_segments == set(\"acf\"):\n            decoded_digits += \"7\"\n        elif decoded_digit_segments == set(\"abcdefg\"):\n            decoded_digits += \"8\"\n        elif decoded_digit_segments == set(\"abcdfg\"):\n            decoded_digits += \"9\"\n    return(int(decoded_digits))\n\n\nif __name__ == \"__main__\":\n    signals_array, output_array= parse_input(\"08/input\")\n    print(part_1_sum(output_array)) # part 1\n    decoded_output = []\n    for i in range(signals_array.shape[0]):\n        decoder = build_decoder(signals_array[i,:])\n        decoded_output += [decode(output_array[i], decoder)]\n    print(sum(decoded_output)) # part 2\n","language":{"name":"python","nodeTypeInfo":[{"type":"_compound_statement","named":true,"subtypes":[{"type":"class_definition","named":true},{"type":"decorated_definition","named":true},{"type":"for_statement","named":true},{"type":"function_definition","named":true},{"type":"if_statement","named":true},{"type":"match_statement","named":true},{"type":"try_statement","named":true},{"type":"while_statement","named":true},{"type":"with_statement","named":true}]},{"type":"_simple_statement","named":true,"subtypes":[{"type":"assert_statement","named":true},{"type":"break_statement","named":true},{"type":"continue_statement","named":true},{"type":"delete_statement","named":true},{"type":"exec_statement","named":true},{"type":"expression_statement","named":true},{"type":"future_import_statement","named":true},{"type":"global_statement","named":true},{"type":"import_from_statement","named":true},{"type":"import_statement","named":true},{"type":"nonlocal_statement","named":true},{"type":"pass_statement","named":true},{"type":"print_statement","named":true},{"type":"raise_statement","named":true},{"type":"return_statement","named":true},{"type":"type_alias_statement","named":true}]},{"type":"expression","named":true,"subtypes":[{"type":"as_pattern","named":true},{"type":"boolean_operator","named":true},{"type":"comparison_operator","named":true},{"type":"conditional_expression","named":true},{"type":"lambda","named":true},{"type":"named_expression","named":true},{"type":"not_operator","named":true},{"type":"primary_expression","named":true}]},{"type":"parameter","named":true,"subtypes":[{"type":"default_parameter","named":true},{"type":"dictionary_splat_pattern","named":true},{"type":"identifier","named":true},{"type":"keyword_separator","named":true},{"type":"list_splat_pattern","named":true},{"type":"positional_separator","named":true},{"type":"tuple_pattern","named":true},{"type":"typed_default_parameter","named":true},{"type":"typed_parameter","named":true}]},{"type":"pattern","named":true,"subtypes":[{"type":"attribute","named":true},{"type":"identifier","named":true},{"type":"list_pattern","named":true},{"type":"list_splat_pattern","named":true},{"type":"subscript","named":true},{"type":"tuple_pattern","named":true}]},{"type":"primary_expression","named":true,"subtypes":[{"type":"attribute","named":true},{"type":"await","named":true},{"type":"binary_operator","named":true},{"type":"call","named":true},{"type":"concatenated_string","named":true},{"type":"dictionary","named":true},{"type":"dictionary_comprehension","named":true},{"type":"ellipsis","named":true},{"type":"false","named":true},{"type":"float","named":true},{"type":"generator_expression","named":true},{"type":"identifier","named":true},{"type":"integer","named":true},{"type":"list","named":true},{"type":"list_comprehension","named":true},{"type":"list_splat","named":true},{"type":"none","named":true},{"type":"parenthesized_expression","named":true},{"type":"set","named":true},{"type":"set_comprehension","named":true},{"type":"string","named":true},{"type":"subscript","named":true},{"type":"true","named":true},{"type":"tuple","named":true},{"type":"unary_operator","named":true}]},{"type":"aliased_import","named":true,"fields":{"alias":{"multiple":false,"required":true,"types":[{"type":"identifier","named":true}]},"name":{"multiple":false,"required":true,"types":[{"type":"dotted_name","named":true}]}}},{"type":"argument_list","named":true,"fields":{},"children":{"multiple":true,"required":false,"types":[{"type":"dictionary_splat","named":true},{"type":"expression","named":true},{"type":"keyword_argument","named":true},{"type":"list_splat","named":true},{"type":"parenthesized_expression","named":true}]}},{"type":"as_pattern","named":true,"fields":{"alias":{"multiple":false,"required":false,"types":[{"type":"as_pattern_target","named":true}]}},"children":{"multiple":true,"required":true,"types":[{"type":"case_pattern","named":true},{"type":"expression","named":true},{"type":"identifier","named":true}]}},{"type":"assert_statement","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"expression","named":true}]}},{"type":"assignment","named":true,"fields":{"left":{"multiple":false,"required":true,"types":[{"type":"pattern","named":true},{"type":"pattern_list","named":true}]},"right":{"multiple":false,"required":false,"types":[{"type":"assignment","named":true},{"type":"augmented_assignment","named":true},{"type":"expression","named":true},{"type":"expression_list","named":true},{"type":"pattern_list","named":true},{"type":"yield","named":true}]},"type":{"multiple":false,"required":false,"types":[{"type":"type","named":true}]}}},{"type":"attribute","named":true,"fields":{"attribute":{"multiple":false,"required":true,"types":[{"type":"identifier","named":true}]},"object":{"multiple":false,"required":true,"types":[{"type":"primary_expression","named":true}]}}},{"type":"augmented_assignment","named":true,"fields":{"left":{"multiple":false,"required":true,"types":[{"type":"pattern","named":true},{"type":"pattern_list","named":true}]},"operator":{"multiple":false,"required":true,"types":[{"type":"%=","named":false},{"type":"&=","named":false},{"type":"**=","named":false},{"type":"*=","named":false},{"type":"+=","named":false},{"type":"-=","named":false},{"type":"//=","named":false},{"type":"/=","named":false},{"type":"<<=","named":false},{"type":">>=","named":false},{"type":"@=","named":false},{"type":"^=","named":false},{"type":"|=","named":false}]},"right":{"multiple":false,"required":true,"types":[{"type":"assignment","named":true},{"type":"augmented_assignment","named":true},{"type":"expression","named":true},{"type":"expression_list","named":true},{"type":"pattern_list","named":true},{"type":"yield","named":true}]}}},{"type":"await","named":true,"fields":{},"children":{"multiple":false,"required":true,"types":[{"type":"primary_expression","named":true}]}},{"type":"binary_operator","named":true,"fields":{"left":{"multiple":false,"required":true,"types":[{"type":"primary_expression","named":true}]},"operator":{"multiple":false,"required":true,"types":[{"type":"%","named":false},{"type":"&","named":false},{"type":"*","named":false},{"type":"**","named":false},{"type":"+","named":false},{"type":"-","named":false},{"type":"/","named":false},{"type":"//","named":false},{"type":"<<","named":false},{"type":">>","named":false},{"type":"@","named":false},{"type":"^","named":false},{"type":"|","named":false}]},"right":{"multiple":false,"required":true,"types":[{"type":"primary_expression","named":true}]}}},{"type":"block","named":true,"fields":{"alternative":{"multiple":true,"required":false,"types":[{"type":"case_clause","named":true}]}},"children":{"multiple":true,"required":false,"types":[{"type":"_compound_statement","named":true},{"type":"_simple_statement","named":true}]}},{"type":"boolean_operator","named":true,"fields":{"left":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]},"operator":{"multiple":false,"required":true,"types":[{"type":"and","named":false},{"type":"or","named":false}]},"right":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}}},{"type":"break_statement","named":true,"fields":{}},{"type":"call","named":true,"fields":{"arguments":{"multiple":false,"required":true,"types":[{"type":"argument_list","named":true},{"type":"generator_expression","named":true}]},"function":{"multiple":false,"required":true,"types":[{"type":"primary_expression","named":true}]}}},{"type":"case_clause","named":true,"fields":{"consequence":{"multiple":false,"required":true,"types":[{"type":"block","named":true}]},"guard":{"multiple":false,"required":false,"types":[{"type":"if_clause","named":true}]}},"children":{"multiple":true,"required":true,"types":[{"type":"case_pattern","named":true}]}},{"type":"case_pattern","named":true,"fields":{},"children":{"multiple":false,"required":false,"types":[{"type":"as_pattern","named":true},{"type":"class_pattern","named":true},{"type":"complex_pattern","named":true},{"type":"concatenated_string","named":true},{"type":"dict_pattern","named":true},{"type":"dotted_name","named":true},{"type":"false","named":true},{"type":"float","named":true},{"type":"integer","named":true},{"type":"keyword_pattern","named":true},{"type":"list_pattern","named":true},{"type":"none","named":true},{"type":"splat_pattern","named":true},{"type":"string","named":true},{"type":"true","named":true},{"type":"tuple_pattern","named":true},{"type":"union_pattern","named":true}]}},{"type":"chevron","named":true,"fields":{},"children":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}},{"type":"class_definition","named":true,"fields":{"body":{"multiple":false,"required":true,"types":[{"type":"block","named":true}]},"name":{"multiple":false,"required":true,"types":[{"type":"identifier","named":true}]},"superclasses":{"multiple":false,"required":false,"types":[{"type":"argument_list","named":true}]},"type_parameters":{"multiple":false,"required":false,"types":[{"type":"type_parameter","named":true}]}}},{"type":"class_pattern","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"case_pattern","named":true},{"type":"dotted_name","named":true}]}},{"type":"comparison_operator","named":true,"fields":{"operators":{"multiple":true,"required":true,"types":[{"type":"!=","named":false},{"type":"<","named":false},{"type":"<=","named":false},{"type":"<>","named":false},{"type":"==","named":false},{"type":">","named":false},{"type":">=","named":false},{"type":"in","named":false},{"type":"is","named":false},{"type":"is not","named":false},{"type":"not in","named":false}]}},"children":{"multiple":true,"required":true,"types":[{"type":"primary_expression","named":true}]}},{"type":"complex_pattern","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"float","named":true},{"type":"integer","named":true}]}},{"type":"concatenated_string","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"string","named":true}]}},{"type":"conditional_expression","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"expression","named":true}]}},{"type":"constrained_type","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"type","named":true}]}},{"type":"continue_statement","named":true,"fields":{}},{"type":"decorated_definition","named":true,"fields":{"definition":{"multiple":false,"required":true,"types":[{"type":"class_definition","named":true},{"type":"function_definition","named":true}]}},"children":{"multiple":true,"required":true,"types":[{"type":"decorator","named":true}]}},{"type":"decorator","named":true,"fields":{},"children":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}},{"type":"default_parameter","named":true,"fields":{"name":{"multiple":false,"required":true,"types":[{"type":"identifier","named":true},{"type":"tuple_pattern","named":true}]},"value":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}}},{"type":"delete_statement","named":true,"fields":{},"children":{"multiple":false,"required":true,"types":[{"type":"expression","named":true},{"type":"expression_list","named":true}]}},{"type":"dict_pattern","named":true,"fields":{"key":{"multiple":true,"required":false,"types":[{"type":"-","named":false},{"type":"_","named":false},{"type":"class_pattern","named":true},{"type":"complex_pattern","named":true},{"type":"concatenated_string","named":true},{"type":"dict_pattern","named":true},{"type":"dotted_name","named":true},{"type":"false","named":true},{"type":"float","named":true},{"type":"integer","named":true},{"type":"list_pattern","named":true},{"type":"none","named":true},{"type":"splat_pattern","named":true},{"type":"string","named":true},{"type":"true","named":true},{"type":"tuple_pattern","named":true},{"type":"union_pattern","named":true}]},"value":{"multiple":true,"required":false,"types":[{"type":"case_pattern","named":true}]}},"children":{"multiple":true,"required":false,"types":[{"type":"splat_pattern","named":true}]}},{"type":"dictionary","named":true,"fields":{},"children":{"multiple":true,"required":false,"types":[{"type":"dictionary_splat","named":true},{"type":"pair","named":true}]}},{"type":"dictionary_comprehension","named":true,"fields":{"body":{"multiple":false,"required":true,"types":[{"type":"pair","named":true}]}},"children":{"multiple":true,"required":true,"types":[{"type":"for_in_clause","named":true},{"type":"if_clause","named":true}]}},{"type":"dictionary_splat","named":true,"fields":{},"children":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}},{"type":"dictionary_splat_pattern","named":true,"fields":{},"children":{"multiple":false,"required":true,"types":[{"type":"attribute","named":true},{"type":"identifier","named":true},{"type":"subscript","named":true}]}},{"type":"dotted_name","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"identifier","named":true}]}},{"type":"elif_clause","named":true,"fields":{"condition":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]},"consequence":{"multiple":false,"required":true,"types":[{"type":"block","named":true}]}}},{"type":"else_clause","named":true,"fields":{"body":{"multiple":false,"required":true,"types":[{"type":"block","named":true}]}}},{"type":"except_clause","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"block","named":true},{"type":"expression","named":true}]}},{"type":"except_group_clause","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"block","named":true},{"type":"expression","named":true}]}},{"type":"exec_statement","named":true,"fields":{"code":{"multiple":false,"required":true,"types":[{"type":"identifier","named":true},{"type":"string","named":true}]}},"children":{"multiple":true,"required":false,"types":[{"type":"expression","named":true}]}},{"type":"expression_list","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"expression","named":true}]}},{"type":"expression_statement","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"assignment","named":true},{"type":"augmented_assignment","named":true},{"type":"expression","named":true},{"type":"yield","named":true}]}},{"type":"finally_clause","named":true,"fields":{},"children":{"multiple":false,"required":true,"types":[{"type":"block","named":true}]}},{"type":"for_in_clause","named":true,"fields":{"left":{"multiple":false,"required":true,"types":[{"type":"pattern","named":true},{"type":"pattern_list","named":true}]},"right":{"multiple":true,"required":true,"types":[{"type":",","named":false},{"type":"expression","named":true}]}}},{"type":"for_statement","named":true,"fields":{"alternative":{"multiple":false,"required":false,"types":[{"type":"else_clause","named":true}]},"body":{"multiple":false,"required":true,"types":[{"type":"block","named":true}]},"left":{"multiple":false,"required":true,"types":[{"type":"pattern","named":true},{"type":"pattern_list","named":true}]},"right":{"multiple":false,"required":true,"types":[{"type":"expression","named":true},{"type":"expression_list","named":true}]}}},{"type":"format_expression","named":true,"fields":{"expression":{"multiple":false,"required":true,"types":[{"type":"expression","named":true},{"type":"expression_list","named":true},{"type":"pattern_list","named":true},{"type":"yield","named":true}]},"format_specifier":{"multiple":false,"required":false,"types":[{"type":"format_specifier","named":true}]},"type_conversion":{"multiple":false,"required":false,"types":[{"type":"type_conversion","named":true}]}}},{"type":"format_specifier","named":true,"fields":{},"children":{"multiple":true,"required":false,"types":[{"type":"format_expression","named":true}]}},{"type":"function_definition","named":true,"fields":{"body":{"multiple":false,"required":true,"types":[{"type":"block","named":true}]},"name":{"multiple":false,"required":true,"types":[{"type":"identifier","named":true}]},"parameters":{"multiple":false,"required":true,"types":[{"type":"parameters","named":true}]},"return_type":{"multiple":false,"required":false,"types":[{"type":"type","named":true}]},"type_parameters":{"multiple":false,"required":false,"types":[{"type":"type_parameter","named":true}]}}},{"type":"future_import_statement","named":true,"fields":{"name":{"multiple":true,"required":true,"types":[{"type":"aliased_import","named":true},{"type":"dotted_name","named":true}]}}},{"type":"generator_expression","named":true,"fields":{"body":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}},"children":{"multiple":true,"required":true,"types":[{"type":"for_in_clause","named":true},{"type":"if_clause","named":true}]}},{"type":"generic_type","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"identifier","named":true},{"type":"type_parameter","named":true}]}},{"type":"global_statement","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"identifier","named":true}]}},{"type":"if_clause","named":true,"fields":{},"children":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}},{"type":"if_statement","named":true,"fields":{"alternative":{"multiple":true,"required":false,"types":[{"type":"elif_clause","named":true},{"type":"else_clause","named":true}]},"condition":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]},"consequence":{"multiple":false,"required":true,"types":[{"type":"block","named":true}]}}},{"type":"import_from_statement","named":true,"fields":{"module_name":{"multiple":false,"required":true,"types":[{"type":"dotted_name","named":true},{"type":"relative_import","named":true}]},"name":{"multiple":true,"required":false,"types":[{"type":"aliased_import","named":true},{"type":"dotted_name","named":true}]}},"children":{"multiple":false,"required":false,"types":[{"type":"wildcard_import","named":true}]}},{"type":"import_prefix","named":true,"fields":{}},{"type":"import_statement","named":true,"fields":{"name":{"multiple":true,"required":true,"types":[{"type":"aliased_import","named":true},{"type":"dotted_name","named":true}]}}},{"type":"interpolation","named":true,"fields":{"expression":{"multiple":false,"required":true,"types":[{"type":"expression","named":true},{"type":"expression_list","named":true},{"type":"pattern_list","named":true},{"type":"yield","named":true}]},"format_specifier":{"multiple":false,"required":false,"types":[{"type":"format_specifier","named":true}]},"type_conversion":{"multiple":false,"required":false,"types":[{"type":"type_conversion","named":true}]}}},{"type":"keyword_argument","named":true,"fields":{"name":{"multiple":false,"required":true,"types":[{"type":"identifier","named":true}]},"value":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}}},{"type":"keyword_pattern","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"class_pattern","named":true},{"type":"complex_pattern","named":true},{"type":"concatenated_string","named":true},{"type":"dict_pattern","named":true},{"type":"dotted_name","named":true},{"type":"false","named":true},{"type":"float","named":true},{"type":"identifier","named":true},{"type":"integer","named":true},{"type":"list_pattern","named":true},{"type":"none","named":true},{"type":"splat_pattern","named":true},{"type":"string","named":true},{"type":"true","named":true},{"type":"tuple_pattern","named":true},{"type":"union_pattern","named":true}]}},{"type":"keyword_separator","named":true,"fields":{}},{"type":"lambda","named":true,"fields":{"body":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]},"parameters":{"multiple":false,"required":false,"types":[{"type":"lambda_parameters","named":true}]}}},{"type":"lambda_parameters","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"parameter","named":true}]}},{"type":"list","named":true,"fields":{},"children":{"multiple":true,"required":false,"types":[{"type":"expression","named":true},{"type":"list_splat","named":true},{"type":"parenthesized_list_splat","named":true},{"type":"yield","named":true}]}},{"type":"list_comprehension","named":true,"fields":{"body":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}},"children":{"multiple":true,"required":true,"types":[{"type":"for_in_clause","named":true},{"type":"if_clause","named":true}]}},{"type":"list_pattern","named":true,"fields":{},"children":{"multiple":true,"required":false,"types":[{"type":"case_pattern","named":true},{"type":"pattern","named":true}]}},{"type":"list_splat","named":true,"fields":{},"children":{"multiple":false,"required":true,"types":[{"type":"attribute","named":true},{"type":"expression","named":true},{"type":"identifier","named":true},{"type":"subscript","named":true}]}},{"type":"list_splat_pattern","named":true,"fields":{},"children":{"multiple":false,"required":true,"types":[{"type":"attribute","named":true},{"type":"identifier","named":true},{"type":"subscript","named":true}]}},{"type":"match_statement","named":true,"fields":{"body":{"multiple":false,"required":true,"types":[{"type":"block","named":true}]},"subject":{"multiple":true,"required":true,"types":[{"type":"expression","named":true}]}}},{"type":"member_type","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"identifier","named":true},{"type":"type","named":true}]}},{"type":"module","named":true,"fields":{},"children":{"multiple":true,"required":false,"types":[{"type":"_compound_statement","named":true},{"type":"_simple_statement","named":true}]}},{"type":"named_expression","named":true,"fields":{"name":{"multiple":false,"required":true,"types":[{"type":"identifier","named":true}]},"value":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}}},{"type":"nonlocal_statement","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"identifier","named":true}]}},{"type":"not_operator","named":true,"fields":{"argument":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}}},{"type":"pair","named":true,"fields":{"key":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]},"value":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}}},{"type":"parameters","named":true,"fields":{},"children":{"multiple":true,"required":false,"types":[{"type":"parameter","named":true}]}},{"type":"parenthesized_expression","named":true,"fields":{},"children":{"multiple":false,"required":true,"types":[{"type":"expression","named":true},{"type":"list_splat","named":true},{"type":"parenthesized_expression","named":true},{"type":"yield","named":true}]}},{"type":"parenthesized_list_splat","named":true,"fields":{},"children":{"multiple":false,"required":true,"types":[{"type":"list_splat","named":true},{"type":"parenthesized_expression","named":true}]}},{"type":"pass_statement","named":true,"fields":{}},{"type":"pattern_list","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"pattern","named":true}]}},{"type":"positional_separator","named":true,"fields":{}},{"type":"print_statement","named":true,"fields":{"argument":{"multiple":true,"required":false,"types":[{"type":"expression","named":true}]}},"children":{"multiple":false,"required":false,"types":[{"type":"chevron","named":true}]}},{"type":"raise_statement","named":true,"fields":{"cause":{"multiple":false,"required":false,"types":[{"type":"expression","named":true}]}},"children":{"multiple":false,"required":false,"types":[{"type":"expression","named":true},{"type":"expression_list","named":true}]}},{"type":"relative_import","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"dotted_name","named":true},{"type":"import_prefix","named":true}]}},{"type":"return_statement","named":true,"fields":{},"children":{"multiple":false,"required":false,"types":[{"type":"expression","named":true},{"type":"expression_list","named":true}]}},{"type":"set","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"expression","named":true},{"type":"list_splat","named":true},{"type":"parenthesized_list_splat","named":true},{"type":"yield","named":true}]}},{"type":"set_comprehension","named":true,"fields":{"body":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}},"children":{"multiple":true,"required":true,"types":[{"type":"for_in_clause","named":true},{"type":"if_clause","named":true}]}},{"type":"slice","named":true,"fields":{},"children":{"multiple":true,"required":false,"types":[{"type":"expression","named":true}]}},{"type":"splat_pattern","named":true,"fields":{},"children":{"multiple":false,"required":false,"types":[{"type":"identifier","named":true}]}},{"type":"splat_type","named":true,"fields":{},"children":{"multiple":false,"required":true,"types":[{"type":"identifier","named":true}]}},{"type":"string","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"interpolation","named":true},{"type":"string_content","named":true},{"type":"string_end","named":true},{"type":"string_start","named":true}]}},{"type":"string_content","named":true,"fields":{},"children":{"multiple":true,"required":false,"types":[{"type":"escape_interpolation","named":true},{"type":"escape_sequence","named":true}]}},{"type":"subscript","named":true,"fields":{"subscript":{"multiple":true,"required":true,"types":[{"type":"expression","named":true},{"type":"slice","named":true}]},"value":{"multiple":false,"required":true,"types":[{"type":"primary_expression","named":true}]}}},{"type":"try_statement","named":true,"fields":{"body":{"multiple":false,"required":true,"types":[{"type":"block","named":true}]}},"children":{"multiple":true,"required":true,"types":[{"type":"else_clause","named":true},{"type":"except_clause","named":true},{"type":"except_group_clause","named":true},{"type":"finally_clause","named":true}]}},{"type":"tuple","named":true,"fields":{},"children":{"multiple":true,"required":false,"types":[{"type":"expression","named":true},{"type":"list_splat","named":true},{"type":"parenthesized_list_splat","named":true},{"type":"yield","named":true}]}},{"type":"tuple_pattern","named":true,"fields":{},"children":{"multiple":true,"required":false,"types":[{"type":"case_pattern","named":true},{"type":"pattern","named":true}]}},{"type":"type","named":true,"fields":{},"children":{"multiple":false,"required":true,"types":[{"type":"constrained_type","named":true},{"type":"expression","named":true},{"type":"generic_type","named":true},{"type":"member_type","named":true},{"type":"splat_type","named":true},{"type":"union_type","named":true}]}},{"type":"type_alias_statement","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"type","named":true}]}},{"type":"type_parameter","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"type","named":true}]}},{"type":"typed_default_parameter","named":true,"fields":{"name":{"multiple":false,"required":true,"types":[{"type":"identifier","named":true}]},"type":{"multiple":false,"required":true,"types":[{"type":"type","named":true}]},"value":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}}},{"type":"typed_parameter","named":true,"fields":{"type":{"multiple":false,"required":true,"types":[{"type":"type","named":true}]}},"children":{"multiple":false,"required":true,"types":[{"type":"dictionary_splat_pattern","named":true},{"type":"identifier","named":true},{"type":"list_splat_pattern","named":true}]}},{"type":"unary_operator","named":true,"fields":{"argument":{"multiple":false,"required":true,"types":[{"type":"primary_expression","named":true}]},"operator":{"multiple":false,"required":true,"types":[{"type":"+","named":false},{"type":"-","named":false},{"type":"~","named":false}]}}},{"type":"union_pattern","named":true,"fields":{},"children":{"multiple":true,"required":false,"types":[{"type":"class_pattern","named":true},{"type":"complex_pattern","named":true},{"type":"concatenated_string","named":true},{"type":"dict_pattern","named":true},{"type":"dotted_name","named":true},{"type":"false","named":true},{"type":"float","named":true},{"type":"integer","named":true},{"type":"list_pattern","named":true},{"type":"none","named":true},{"type":"splat_pattern","named":true},{"type":"string","named":true},{"type":"true","named":true},{"type":"tuple_pattern","named":true},{"type":"union_pattern","named":true}]}},{"type":"union_type","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"type","named":true}]}},{"type":"while_statement","named":true,"fields":{"alternative":{"multiple":false,"required":false,"types":[{"type":"else_clause","named":true}]},"body":{"multiple":false,"required":true,"types":[{"type":"block","named":true}]},"condition":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}}},{"type":"wildcard_import","named":true,"fields":{}},{"type":"with_clause","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"with_item","named":true}]}},{"type":"with_item","named":true,"fields":{"value":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}}},{"type":"with_statement","named":true,"fields":{"body":{"multiple":false,"required":true,"types":[{"type":"block","named":true}]}},"children":{"multiple":false,"required":true,"types":[{"type":"with_clause","named":true}]}},{"type":"yield","named":true,"fields":{},"children":{"multiple":false,"required":false,"types":[{"type":"expression","named":true},{"type":"expression_list","named":true}]}},{"type":"!=","named":false},{"type":"%","named":false},{"type":"%=","named":false},{"type":"&","named":false},{"type":"&=","named":false},{"type":"(","named":false},{"type":")","named":false},{"type":"*","named":false},{"type":"**","named":false},{"type":"**=","named":false},{"type":"*=","named":false},{"type":"+","named":false},{"type":"+=","named":false},{"type":",","named":false},{"type":"-","named":false},{"type":"-=","named":false},{"type":"->","named":false},{"type":".","named":false},{"type":"/","named":false},{"type":"//","named":false},{"type":"//=","named":false},{"type":"/=","named":false},{"type":":","named":false},{"type":":=","named":false},{"type":";","named":false},{"type":"<","named":false},{"type":"<<","named":false},{"type":"<<=","named":false},{"type":"<=","named":false},{"type":"<>","named":false},{"type":"=","named":false},{"type":"==","named":false},{"type":">","named":false},{"type":">=","named":false},{"type":">>","named":false},{"type":">>=","named":false},{"type":"@","named":false},{"type":"@=","named":false},{"type":"[","named":false},{"type":"]","named":false},{"type":"^","named":false},{"type":"^=","named":false},{"type":"_","named":false},{"type":"__future__","named":false},{"type":"and","named":false},{"type":"as","named":false},{"type":"assert","named":false},{"type":"async","named":false},{"type":"await","named":false},{"type":"break","named":false},{"type":"case","named":false},{"type":"class","named":false},{"type":"comment","named":true},{"type":"continue","named":false},{"type":"def","named":false},{"type":"del","named":false},{"type":"elif","named":false},{"type":"ellipsis","named":true},{"type":"else","named":false},{"type":"escape_interpolation","named":true},{"type":"escape_sequence","named":true},{"type":"except","named":false},{"type":"except*","named":false},{"type":"exec","named":false},{"type":"false","named":true},{"type":"finally","named":false},{"type":"float","named":true},{"type":"for","named":false},{"type":"from","named":false},{"type":"global","named":false},{"type":"identifier","named":true},{"type":"if","named":false},{"type":"import","named":false},{"type":"in","named":false},{"type":"integer","named":true},{"type":"is","named":false},{"type":"is not","named":false},{"type":"lambda","named":false},{"type":"line_continuation","named":true},{"type":"match","named":false},{"type":"none","named":true},{"type":"nonlocal","named":false},{"type":"not","named":false},{"type":"not in","named":false},{"type":"or","named":false},{"type":"pass","named":false},{"type":"print","named":false},{"type":"raise","named":false},{"type":"return","named":false},{"type":"string_end","named":true},{"type":"string_start","named":true},{"type":"true","named":true},{"type":"try","named":false},{"type":"type","named":false},{"type":"type_conversion","named":true},{"type":"while","named":false},{"type":"with","named":false},{"type":"yield","named":false},{"type":"{","named":false},{"type":"|","named":false},{"type":"|=","named":false},{"type":"}","named":false},{"type":"~","named":false}],"nodeSubclasses":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]}}},"docLength":11,"stripped":"sig_len = np.vectorize(len)(sig_row)\ndecoder = {}\ncount_all = Counter(''.join(sig_row))\ncount_no_4 = Counter(''.join(sig_row[sig_len!=4]))\nfor k in \"abcdefg\":\n        to_match = (count_all[k], count_no_4[k])\n        if to_match == (8, 8):\n            decoder[k] = \"a\"\n        elif to_match == (6, 5):\n            decoder[k] = \"b\"\n        elif to_match == (8, 7):\n            decoder[k] = \"c\"\n        elif to_match == (7, 6):\n            decoder[k] = \"d\"\n        elif to_match == (4, 4):\n            decoder[k] = \"e\"\n        elif to_match == (9, 8):\n            decoder[k] = \"f\"\n        elif to_match == (7, 7):\n            decoder[k] = \"g\"\nreturn(decoder)","length":33,"comment":{"description":"takes a signal row as input and builds a dictionary to identify the unique signature of each segment in the row based on the number of occurrences of each digit, including and excluding digit 4.","params":[{"name":"sig_row","type":"int","value":null,"description":"10-element signals row that is to be processed and decoded using the function."}],"returns":{"type":"dict","description":"a dictionary containing unique signatures for each segment in the signals row."}}},{"id":"9a1d6294-d047-4a87-a6eb-624bdd5f7c34","ancestors":[],"type":"function","name":"decode","location":{"offset":" ","indent":4,"start":49,"insert":50},"code":"def decode(output, decoder):\n    \"\"\"Given the (1,4) input row and the decoder, returns the corresponding row integer.\"\"\"\n    decoded_digits = \"\"\n    for digit in output:\n        decoded_digit_segments = set()\n        for char in digit:\n            decoded_digit_segments.add(decoder[char])\n        if decoded_digit_segments == set(\"abcefg\"):\n            decoded_digits += \"0\"\n        elif decoded_digit_segments == set(\"cf\"):\n            decoded_digits += \"1\"\n        elif decoded_digit_segments == set(\"acdeg\"):\n            decoded_digits += \"2\"\n        elif decoded_digit_segments == set(\"acdfg\"):\n            decoded_digits += \"3\"\n        elif decoded_digit_segments == set(\"bcdf\"):\n            decoded_digits += \"4\"\n        elif decoded_digit_segments == set(\"abdfg\"):\n            decoded_digits += \"5\"\n        elif decoded_digit_segments == set(\"abdefg\"):\n            decoded_digits += \"6\"\n        elif decoded_digit_segments == set(\"acf\"):\n            decoded_digits += \"7\"\n        elif decoded_digit_segments == set(\"abcdefg\"):\n            decoded_digits += \"8\"\n        elif decoded_digit_segments == set(\"abcdfg\"):\n            decoded_digits += \"9\"\n    return(int(decoded_digits))","params":[{"name":"output","value":null,"type":null},{"name":"decoder","value":null,"type":null}],"returns":true,"skip":false,"doc":{"0":32802592,"1":24576,"2":3654,"3":49,"4":8,"5":0,"tree":{"input":"import numpy as np\nfrom collections import Counter\n\ndef parse_input(file):\n    lines = open(file,'r').readlines()\n    lines = [x.strip().split(' | ') for x in lines]\n    signals_array = np.array([x[0].split() for x in lines])\n    output_array = np.array([x[1].split() for x in lines])\n    return(signals_array, output_array)\n\ndef part_1_sum(output_array):\n    output_length_array = np.vectorize(len)(output_array)\n    return(np.sum(np.isin(output_length_array, [2,3,4,7]), axis=(0, 1)))\n\ndef build_decoder(sig_row):\n    \"\"\"\n    Builds the decoder dict for a given (1,10) signals row.\n    This leverages the observation that if I count the number of patterns in which each segment appears\n    (1) in the whole signals row \n    (2) in the signals row where I remove the (easily identifiable) digit 4\n    each of the 7 segments has a unique 'signature'. \n    For example:\n    - segment 'a' is the only one which appears 8 times both with digit 4 included, and with digit 4 excluded.\n    - segment 'b' is the only one which appears 6 times with digit 4 included, and 5 times with digit 4 excluded.\n    - etc.\n    \"\"\"\n    sig_len = np.vectorize(len)(sig_row)\n    decoder = {}\n    count_all = Counter(''.join(sig_row))\n    count_no_4 = Counter(''.join(sig_row[sig_len!=4]))\n    for k in \"abcdefg\":\n        to_match = (count_all[k], count_no_4[k])\n        if to_match == (8, 8):\n            decoder[k] = \"a\"\n        elif to_match == (6, 5):\n            decoder[k] = \"b\"\n        elif to_match == (8, 7):\n            decoder[k] = \"c\"\n        elif to_match == (7, 6):\n            decoder[k] = \"d\"\n        elif to_match == (4, 4):\n            decoder[k] = \"e\"\n        elif to_match == (9, 8):\n            decoder[k] = \"f\"\n        elif to_match == (7, 7):\n            decoder[k] = \"g\"\n    return(decoder)\n\ndef decode(output, decoder):\n    \"\"\"Given the (1,4) input row and the decoder, returns the corresponding row integer.\"\"\"\n    decoded_digits = \"\"\n    for digit in output:\n        decoded_digit_segments = set()\n        for char in digit:\n            decoded_digit_segments.add(decoder[char])\n        if decoded_digit_segments == set(\"abcefg\"):\n            decoded_digits += \"0\"\n        elif decoded_digit_segments == set(\"cf\"):\n            decoded_digits += \"1\"\n        elif decoded_digit_segments == set(\"acdeg\"):\n            decoded_digits += \"2\"\n        elif decoded_digit_segments == set(\"acdfg\"):\n            decoded_digits += \"3\"\n        elif decoded_digit_segments == set(\"bcdf\"):\n            decoded_digits += \"4\"\n        elif decoded_digit_segments == set(\"abdfg\"):\n            decoded_digits += \"5\"\n        elif decoded_digit_segments == set(\"abdefg\"):\n            decoded_digits += \"6\"\n        elif decoded_digit_segments == set(\"acf\"):\n            decoded_digits += \"7\"\n        elif decoded_digit_segments == set(\"abcdefg\"):\n            decoded_digits += \"8\"\n        elif decoded_digit_segments == set(\"abcdfg\"):\n            decoded_digits += \"9\"\n    return(int(decoded_digits))\n\n\nif __name__ == \"__main__\":\n    signals_array, output_array= parse_input(\"08/input\")\n    print(part_1_sum(output_array)) # part 1\n    decoded_output = []\n    for i in range(signals_array.shape[0]):\n        decoder = build_decoder(signals_array[i,:])\n        decoded_output += [decode(output_array[i], decoder)]\n    print(sum(decoded_output)) # part 2\n","language":{"name":"python","nodeTypeInfo":[{"type":"_compound_statement","named":true,"subtypes":[{"type":"class_definition","named":true},{"type":"decorated_definition","named":true},{"type":"for_statement","named":true},{"type":"function_definition","named":true},{"type":"if_statement","named":true},{"type":"match_statement","named":true},{"type":"try_statement","named":true},{"type":"while_statement","named":true},{"type":"with_statement","named":true}]},{"type":"_simple_statement","named":true,"subtypes":[{"type":"assert_statement","named":true},{"type":"break_statement","named":true},{"type":"continue_statement","named":true},{"type":"delete_statement","named":true},{"type":"exec_statement","named":true},{"type":"expression_statement","named":true},{"type":"future_import_statement","named":true},{"type":"global_statement","named":true},{"type":"import_from_statement","named":true},{"type":"import_statement","named":true},{"type":"nonlocal_statement","named":true},{"type":"pass_statement","named":true},{"type":"print_statement","named":true},{"type":"raise_statement","named":true},{"type":"return_statement","named":true},{"type":"type_alias_statement","named":true}]},{"type":"expression","named":true,"subtypes":[{"type":"as_pattern","named":true},{"type":"boolean_operator","named":true},{"type":"comparison_operator","named":true},{"type":"conditional_expression","named":true},{"type":"lambda","named":true},{"type":"named_expression","named":true},{"type":"not_operator","named":true},{"type":"primary_expression","named":true}]},{"type":"parameter","named":true,"subtypes":[{"type":"default_parameter","named":true},{"type":"dictionary_splat_pattern","named":true},{"type":"identifier","named":true},{"type":"keyword_separator","named":true},{"type":"list_splat_pattern","named":true},{"type":"positional_separator","named":true},{"type":"tuple_pattern","named":true},{"type":"typed_default_parameter","named":true},{"type":"typed_parameter","named":true}]},{"type":"pattern","named":true,"subtypes":[{"type":"attribute","named":true},{"type":"identifier","named":true},{"type":"list_pattern","named":true},{"type":"list_splat_pattern","named":true},{"type":"subscript","named":true},{"type":"tuple_pattern","named":true}]},{"type":"primary_expression","named":true,"subtypes":[{"type":"attribute","named":true},{"type":"await","named":true},{"type":"binary_operator","named":true},{"type":"call","named":true},{"type":"concatenated_string","named":true},{"type":"dictionary","named":true},{"type":"dictionary_comprehension","named":true},{"type":"ellipsis","named":true},{"type":"false","named":true},{"type":"float","named":true},{"type":"generator_expression","named":true},{"type":"identifier","named":true},{"type":"integer","named":true},{"type":"list","named":true},{"type":"list_comprehension","named":true},{"type":"list_splat","named":true},{"type":"none","named":true},{"type":"parenthesized_expression","named":true},{"type":"set","named":true},{"type":"set_comprehension","named":true},{"type":"string","named":true},{"type":"subscript","named":true},{"type":"true","named":true},{"type":"tuple","named":true},{"type":"unary_operator","named":true}]},{"type":"aliased_import","named":true,"fields":{"alias":{"multiple":false,"required":true,"types":[{"type":"identifier","named":true}]},"name":{"multiple":false,"required":true,"types":[{"type":"dotted_name","named":true}]}}},{"type":"argument_list","named":true,"fields":{},"children":{"multiple":true,"required":false,"types":[{"type":"dictionary_splat","named":true},{"type":"expression","named":true},{"type":"keyword_argument","named":true},{"type":"list_splat","named":true},{"type":"parenthesized_expression","named":true}]}},{"type":"as_pattern","named":true,"fields":{"alias":{"multiple":false,"required":false,"types":[{"type":"as_pattern_target","named":true}]}},"children":{"multiple":true,"required":true,"types":[{"type":"case_pattern","named":true},{"type":"expression","named":true},{"type":"identifier","named":true}]}},{"type":"assert_statement","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"expression","named":true}]}},{"type":"assignment","named":true,"fields":{"left":{"multiple":false,"required":true,"types":[{"type":"pattern","named":true},{"type":"pattern_list","named":true}]},"right":{"multiple":false,"required":false,"types":[{"type":"assignment","named":true},{"type":"augmented_assignment","named":true},{"type":"expression","named":true},{"type":"expression_list","named":true},{"type":"pattern_list","named":true},{"type":"yield","named":true}]},"type":{"multiple":false,"required":false,"types":[{"type":"type","named":true}]}}},{"type":"attribute","named":true,"fields":{"attribute":{"multiple":false,"required":true,"types":[{"type":"identifier","named":true}]},"object":{"multiple":false,"required":true,"types":[{"type":"primary_expression","named":true}]}}},{"type":"augmented_assignment","named":true,"fields":{"left":{"multiple":false,"required":true,"types":[{"type":"pattern","named":true},{"type":"pattern_list","named":true}]},"operator":{"multiple":false,"required":true,"types":[{"type":"%=","named":false},{"type":"&=","named":false},{"type":"**=","named":false},{"type":"*=","named":false},{"type":"+=","named":false},{"type":"-=","named":false},{"type":"//=","named":false},{"type":"/=","named":false},{"type":"<<=","named":false},{"type":">>=","named":false},{"type":"@=","named":false},{"type":"^=","named":false},{"type":"|=","named":false}]},"right":{"multiple":false,"required":true,"types":[{"type":"assignment","named":true},{"type":"augmented_assignment","named":true},{"type":"expression","named":true},{"type":"expression_list","named":true},{"type":"pattern_list","named":true},{"type":"yield","named":true}]}}},{"type":"await","named":true,"fields":{},"children":{"multiple":false,"required":true,"types":[{"type":"primary_expression","named":true}]}},{"type":"binary_operator","named":true,"fields":{"left":{"multiple":false,"required":true,"types":[{"type":"primary_expression","named":true}]},"operator":{"multiple":false,"required":true,"types":[{"type":"%","named":false},{"type":"&","named":false},{"type":"*","named":false},{"type":"**","named":false},{"type":"+","named":false},{"type":"-","named":false},{"type":"/","named":false},{"type":"//","named":false},{"type":"<<","named":false},{"type":">>","named":false},{"type":"@","named":false},{"type":"^","named":false},{"type":"|","named":false}]},"right":{"multiple":false,"required":true,"types":[{"type":"primary_expression","named":true}]}}},{"type":"block","named":true,"fields":{"alternative":{"multiple":true,"required":false,"types":[{"type":"case_clause","named":true}]}},"children":{"multiple":true,"required":false,"types":[{"type":"_compound_statement","named":true},{"type":"_simple_statement","named":true}]}},{"type":"boolean_operator","named":true,"fields":{"left":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]},"operator":{"multiple":false,"required":true,"types":[{"type":"and","named":false},{"type":"or","named":false}]},"right":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}}},{"type":"break_statement","named":true,"fields":{}},{"type":"call","named":true,"fields":{"arguments":{"multiple":false,"required":true,"types":[{"type":"argument_list","named":true},{"type":"generator_expression","named":true}]},"function":{"multiple":false,"required":true,"types":[{"type":"primary_expression","named":true}]}}},{"type":"case_clause","named":true,"fields":{"consequence":{"multiple":false,"required":true,"types":[{"type":"block","named":true}]},"guard":{"multiple":false,"required":false,"types":[{"type":"if_clause","named":true}]}},"children":{"multiple":true,"required":true,"types":[{"type":"case_pattern","named":true}]}},{"type":"case_pattern","named":true,"fields":{},"children":{"multiple":false,"required":false,"types":[{"type":"as_pattern","named":true},{"type":"class_pattern","named":true},{"type":"complex_pattern","named":true},{"type":"concatenated_string","named":true},{"type":"dict_pattern","named":true},{"type":"dotted_name","named":true},{"type":"false","named":true},{"type":"float","named":true},{"type":"integer","named":true},{"type":"keyword_pattern","named":true},{"type":"list_pattern","named":true},{"type":"none","named":true},{"type":"splat_pattern","named":true},{"type":"string","named":true},{"type":"true","named":true},{"type":"tuple_pattern","named":true},{"type":"union_pattern","named":true}]}},{"type":"chevron","named":true,"fields":{},"children":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}},{"type":"class_definition","named":true,"fields":{"body":{"multiple":false,"required":true,"types":[{"type":"block","named":true}]},"name":{"multiple":false,"required":true,"types":[{"type":"identifier","named":true}]},"superclasses":{"multiple":false,"required":false,"types":[{"type":"argument_list","named":true}]},"type_parameters":{"multiple":false,"required":false,"types":[{"type":"type_parameter","named":true}]}}},{"type":"class_pattern","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"case_pattern","named":true},{"type":"dotted_name","named":true}]}},{"type":"comparison_operator","named":true,"fields":{"operators":{"multiple":true,"required":true,"types":[{"type":"!=","named":false},{"type":"<","named":false},{"type":"<=","named":false},{"type":"<>","named":false},{"type":"==","named":false},{"type":">","named":false},{"type":">=","named":false},{"type":"in","named":false},{"type":"is","named":false},{"type":"is not","named":false},{"type":"not in","named":false}]}},"children":{"multiple":true,"required":true,"types":[{"type":"primary_expression","named":true}]}},{"type":"complex_pattern","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"float","named":true},{"type":"integer","named":true}]}},{"type":"concatenated_string","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"string","named":true}]}},{"type":"conditional_expression","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"expression","named":true}]}},{"type":"constrained_type","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"type","named":true}]}},{"type":"continue_statement","named":true,"fields":{}},{"type":"decorated_definition","named":true,"fields":{"definition":{"multiple":false,"required":true,"types":[{"type":"class_definition","named":true},{"type":"function_definition","named":true}]}},"children":{"multiple":true,"required":true,"types":[{"type":"decorator","named":true}]}},{"type":"decorator","named":true,"fields":{},"children":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}},{"type":"default_parameter","named":true,"fields":{"name":{"multiple":false,"required":true,"types":[{"type":"identifier","named":true},{"type":"tuple_pattern","named":true}]},"value":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}}},{"type":"delete_statement","named":true,"fields":{},"children":{"multiple":false,"required":true,"types":[{"type":"expression","named":true},{"type":"expression_list","named":true}]}},{"type":"dict_pattern","named":true,"fields":{"key":{"multiple":true,"required":false,"types":[{"type":"-","named":false},{"type":"_","named":false},{"type":"class_pattern","named":true},{"type":"complex_pattern","named":true},{"type":"concatenated_string","named":true},{"type":"dict_pattern","named":true},{"type":"dotted_name","named":true},{"type":"false","named":true},{"type":"float","named":true},{"type":"integer","named":true},{"type":"list_pattern","named":true},{"type":"none","named":true},{"type":"splat_pattern","named":true},{"type":"string","named":true},{"type":"true","named":true},{"type":"tuple_pattern","named":true},{"type":"union_pattern","named":true}]},"value":{"multiple":true,"required":false,"types":[{"type":"case_pattern","named":true}]}},"children":{"multiple":true,"required":false,"types":[{"type":"splat_pattern","named":true}]}},{"type":"dictionary","named":true,"fields":{},"children":{"multiple":true,"required":false,"types":[{"type":"dictionary_splat","named":true},{"type":"pair","named":true}]}},{"type":"dictionary_comprehension","named":true,"fields":{"body":{"multiple":false,"required":true,"types":[{"type":"pair","named":true}]}},"children":{"multiple":true,"required":true,"types":[{"type":"for_in_clause","named":true},{"type":"if_clause","named":true}]}},{"type":"dictionary_splat","named":true,"fields":{},"children":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}},{"type":"dictionary_splat_pattern","named":true,"fields":{},"children":{"multiple":false,"required":true,"types":[{"type":"attribute","named":true},{"type":"identifier","named":true},{"type":"subscript","named":true}]}},{"type":"dotted_name","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"identifier","named":true}]}},{"type":"elif_clause","named":true,"fields":{"condition":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]},"consequence":{"multiple":false,"required":true,"types":[{"type":"block","named":true}]}}},{"type":"else_clause","named":true,"fields":{"body":{"multiple":false,"required":true,"types":[{"type":"block","named":true}]}}},{"type":"except_clause","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"block","named":true},{"type":"expression","named":true}]}},{"type":"except_group_clause","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"block","named":true},{"type":"expression","named":true}]}},{"type":"exec_statement","named":true,"fields":{"code":{"multiple":false,"required":true,"types":[{"type":"identifier","named":true},{"type":"string","named":true}]}},"children":{"multiple":true,"required":false,"types":[{"type":"expression","named":true}]}},{"type":"expression_list","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"expression","named":true}]}},{"type":"expression_statement","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"assignment","named":true},{"type":"augmented_assignment","named":true},{"type":"expression","named":true},{"type":"yield","named":true}]}},{"type":"finally_clause","named":true,"fields":{},"children":{"multiple":false,"required":true,"types":[{"type":"block","named":true}]}},{"type":"for_in_clause","named":true,"fields":{"left":{"multiple":false,"required":true,"types":[{"type":"pattern","named":true},{"type":"pattern_list","named":true}]},"right":{"multiple":true,"required":true,"types":[{"type":",","named":false},{"type":"expression","named":true}]}}},{"type":"for_statement","named":true,"fields":{"alternative":{"multiple":false,"required":false,"types":[{"type":"else_clause","named":true}]},"body":{"multiple":false,"required":true,"types":[{"type":"block","named":true}]},"left":{"multiple":false,"required":true,"types":[{"type":"pattern","named":true},{"type":"pattern_list","named":true}]},"right":{"multiple":false,"required":true,"types":[{"type":"expression","named":true},{"type":"expression_list","named":true}]}}},{"type":"format_expression","named":true,"fields":{"expression":{"multiple":false,"required":true,"types":[{"type":"expression","named":true},{"type":"expression_list","named":true},{"type":"pattern_list","named":true},{"type":"yield","named":true}]},"format_specifier":{"multiple":false,"required":false,"types":[{"type":"format_specifier","named":true}]},"type_conversion":{"multiple":false,"required":false,"types":[{"type":"type_conversion","named":true}]}}},{"type":"format_specifier","named":true,"fields":{},"children":{"multiple":true,"required":false,"types":[{"type":"format_expression","named":true}]}},{"type":"function_definition","named":true,"fields":{"body":{"multiple":false,"required":true,"types":[{"type":"block","named":true}]},"name":{"multiple":false,"required":true,"types":[{"type":"identifier","named":true}]},"parameters":{"multiple":false,"required":true,"types":[{"type":"parameters","named":true}]},"return_type":{"multiple":false,"required":false,"types":[{"type":"type","named":true}]},"type_parameters":{"multiple":false,"required":false,"types":[{"type":"type_parameter","named":true}]}}},{"type":"future_import_statement","named":true,"fields":{"name":{"multiple":true,"required":true,"types":[{"type":"aliased_import","named":true},{"type":"dotted_name","named":true}]}}},{"type":"generator_expression","named":true,"fields":{"body":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}},"children":{"multiple":true,"required":true,"types":[{"type":"for_in_clause","named":true},{"type":"if_clause","named":true}]}},{"type":"generic_type","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"identifier","named":true},{"type":"type_parameter","named":true}]}},{"type":"global_statement","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"identifier","named":true}]}},{"type":"if_clause","named":true,"fields":{},"children":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}},{"type":"if_statement","named":true,"fields":{"alternative":{"multiple":true,"required":false,"types":[{"type":"elif_clause","named":true},{"type":"else_clause","named":true}]},"condition":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]},"consequence":{"multiple":false,"required":true,"types":[{"type":"block","named":true}]}}},{"type":"import_from_statement","named":true,"fields":{"module_name":{"multiple":false,"required":true,"types":[{"type":"dotted_name","named":true},{"type":"relative_import","named":true}]},"name":{"multiple":true,"required":false,"types":[{"type":"aliased_import","named":true},{"type":"dotted_name","named":true}]}},"children":{"multiple":false,"required":false,"types":[{"type":"wildcard_import","named":true}]}},{"type":"import_prefix","named":true,"fields":{}},{"type":"import_statement","named":true,"fields":{"name":{"multiple":true,"required":true,"types":[{"type":"aliased_import","named":true},{"type":"dotted_name","named":true}]}}},{"type":"interpolation","named":true,"fields":{"expression":{"multiple":false,"required":true,"types":[{"type":"expression","named":true},{"type":"expression_list","named":true},{"type":"pattern_list","named":true},{"type":"yield","named":true}]},"format_specifier":{"multiple":false,"required":false,"types":[{"type":"format_specifier","named":true}]},"type_conversion":{"multiple":false,"required":false,"types":[{"type":"type_conversion","named":true}]}}},{"type":"keyword_argument","named":true,"fields":{"name":{"multiple":false,"required":true,"types":[{"type":"identifier","named":true}]},"value":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}}},{"type":"keyword_pattern","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"class_pattern","named":true},{"type":"complex_pattern","named":true},{"type":"concatenated_string","named":true},{"type":"dict_pattern","named":true},{"type":"dotted_name","named":true},{"type":"false","named":true},{"type":"float","named":true},{"type":"identifier","named":true},{"type":"integer","named":true},{"type":"list_pattern","named":true},{"type":"none","named":true},{"type":"splat_pattern","named":true},{"type":"string","named":true},{"type":"true","named":true},{"type":"tuple_pattern","named":true},{"type":"union_pattern","named":true}]}},{"type":"keyword_separator","named":true,"fields":{}},{"type":"lambda","named":true,"fields":{"body":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]},"parameters":{"multiple":false,"required":false,"types":[{"type":"lambda_parameters","named":true}]}}},{"type":"lambda_parameters","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"parameter","named":true}]}},{"type":"list","named":true,"fields":{},"children":{"multiple":true,"required":false,"types":[{"type":"expression","named":true},{"type":"list_splat","named":true},{"type":"parenthesized_list_splat","named":true},{"type":"yield","named":true}]}},{"type":"list_comprehension","named":true,"fields":{"body":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}},"children":{"multiple":true,"required":true,"types":[{"type":"for_in_clause","named":true},{"type":"if_clause","named":true}]}},{"type":"list_pattern","named":true,"fields":{},"children":{"multiple":true,"required":false,"types":[{"type":"case_pattern","named":true},{"type":"pattern","named":true}]}},{"type":"list_splat","named":true,"fields":{},"children":{"multiple":false,"required":true,"types":[{"type":"attribute","named":true},{"type":"expression","named":true},{"type":"identifier","named":true},{"type":"subscript","named":true}]}},{"type":"list_splat_pattern","named":true,"fields":{},"children":{"multiple":false,"required":true,"types":[{"type":"attribute","named":true},{"type":"identifier","named":true},{"type":"subscript","named":true}]}},{"type":"match_statement","named":true,"fields":{"body":{"multiple":false,"required":true,"types":[{"type":"block","named":true}]},"subject":{"multiple":true,"required":true,"types":[{"type":"expression","named":true}]}}},{"type":"member_type","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"identifier","named":true},{"type":"type","named":true}]}},{"type":"module","named":true,"fields":{},"children":{"multiple":true,"required":false,"types":[{"type":"_compound_statement","named":true},{"type":"_simple_statement","named":true}]}},{"type":"named_expression","named":true,"fields":{"name":{"multiple":false,"required":true,"types":[{"type":"identifier","named":true}]},"value":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}}},{"type":"nonlocal_statement","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"identifier","named":true}]}},{"type":"not_operator","named":true,"fields":{"argument":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}}},{"type":"pair","named":true,"fields":{"key":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]},"value":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}}},{"type":"parameters","named":true,"fields":{},"children":{"multiple":true,"required":false,"types":[{"type":"parameter","named":true}]}},{"type":"parenthesized_expression","named":true,"fields":{},"children":{"multiple":false,"required":true,"types":[{"type":"expression","named":true},{"type":"list_splat","named":true},{"type":"parenthesized_expression","named":true},{"type":"yield","named":true}]}},{"type":"parenthesized_list_splat","named":true,"fields":{},"children":{"multiple":false,"required":true,"types":[{"type":"list_splat","named":true},{"type":"parenthesized_expression","named":true}]}},{"type":"pass_statement","named":true,"fields":{}},{"type":"pattern_list","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"pattern","named":true}]}},{"type":"positional_separator","named":true,"fields":{}},{"type":"print_statement","named":true,"fields":{"argument":{"multiple":true,"required":false,"types":[{"type":"expression","named":true}]}},"children":{"multiple":false,"required":false,"types":[{"type":"chevron","named":true}]}},{"type":"raise_statement","named":true,"fields":{"cause":{"multiple":false,"required":false,"types":[{"type":"expression","named":true}]}},"children":{"multiple":false,"required":false,"types":[{"type":"expression","named":true},{"type":"expression_list","named":true}]}},{"type":"relative_import","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"dotted_name","named":true},{"type":"import_prefix","named":true}]}},{"type":"return_statement","named":true,"fields":{},"children":{"multiple":false,"required":false,"types":[{"type":"expression","named":true},{"type":"expression_list","named":true}]}},{"type":"set","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"expression","named":true},{"type":"list_splat","named":true},{"type":"parenthesized_list_splat","named":true},{"type":"yield","named":true}]}},{"type":"set_comprehension","named":true,"fields":{"body":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}},"children":{"multiple":true,"required":true,"types":[{"type":"for_in_clause","named":true},{"type":"if_clause","named":true}]}},{"type":"slice","named":true,"fields":{},"children":{"multiple":true,"required":false,"types":[{"type":"expression","named":true}]}},{"type":"splat_pattern","named":true,"fields":{},"children":{"multiple":false,"required":false,"types":[{"type":"identifier","named":true}]}},{"type":"splat_type","named":true,"fields":{},"children":{"multiple":false,"required":true,"types":[{"type":"identifier","named":true}]}},{"type":"string","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"interpolation","named":true},{"type":"string_content","named":true},{"type":"string_end","named":true},{"type":"string_start","named":true}]}},{"type":"string_content","named":true,"fields":{},"children":{"multiple":true,"required":false,"types":[{"type":"escape_interpolation","named":true},{"type":"escape_sequence","named":true}]}},{"type":"subscript","named":true,"fields":{"subscript":{"multiple":true,"required":true,"types":[{"type":"expression","named":true},{"type":"slice","named":true}]},"value":{"multiple":false,"required":true,"types":[{"type":"primary_expression","named":true}]}}},{"type":"try_statement","named":true,"fields":{"body":{"multiple":false,"required":true,"types":[{"type":"block","named":true}]}},"children":{"multiple":true,"required":true,"types":[{"type":"else_clause","named":true},{"type":"except_clause","named":true},{"type":"except_group_clause","named":true},{"type":"finally_clause","named":true}]}},{"type":"tuple","named":true,"fields":{},"children":{"multiple":true,"required":false,"types":[{"type":"expression","named":true},{"type":"list_splat","named":true},{"type":"parenthesized_list_splat","named":true},{"type":"yield","named":true}]}},{"type":"tuple_pattern","named":true,"fields":{},"children":{"multiple":true,"required":false,"types":[{"type":"case_pattern","named":true},{"type":"pattern","named":true}]}},{"type":"type","named":true,"fields":{},"children":{"multiple":false,"required":true,"types":[{"type":"constrained_type","named":true},{"type":"expression","named":true},{"type":"generic_type","named":true},{"type":"member_type","named":true},{"type":"splat_type","named":true},{"type":"union_type","named":true}]}},{"type":"type_alias_statement","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"type","named":true}]}},{"type":"type_parameter","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"type","named":true}]}},{"type":"typed_default_parameter","named":true,"fields":{"name":{"multiple":false,"required":true,"types":[{"type":"identifier","named":true}]},"type":{"multiple":false,"required":true,"types":[{"type":"type","named":true}]},"value":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}}},{"type":"typed_parameter","named":true,"fields":{"type":{"multiple":false,"required":true,"types":[{"type":"type","named":true}]}},"children":{"multiple":false,"required":true,"types":[{"type":"dictionary_splat_pattern","named":true},{"type":"identifier","named":true},{"type":"list_splat_pattern","named":true}]}},{"type":"unary_operator","named":true,"fields":{"argument":{"multiple":false,"required":true,"types":[{"type":"primary_expression","named":true}]},"operator":{"multiple":false,"required":true,"types":[{"type":"+","named":false},{"type":"-","named":false},{"type":"~","named":false}]}}},{"type":"union_pattern","named":true,"fields":{},"children":{"multiple":true,"required":false,"types":[{"type":"class_pattern","named":true},{"type":"complex_pattern","named":true},{"type":"concatenated_string","named":true},{"type":"dict_pattern","named":true},{"type":"dotted_name","named":true},{"type":"false","named":true},{"type":"float","named":true},{"type":"integer","named":true},{"type":"list_pattern","named":true},{"type":"none","named":true},{"type":"splat_pattern","named":true},{"type":"string","named":true},{"type":"true","named":true},{"type":"tuple_pattern","named":true},{"type":"union_pattern","named":true}]}},{"type":"union_type","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"type","named":true}]}},{"type":"while_statement","named":true,"fields":{"alternative":{"multiple":false,"required":false,"types":[{"type":"else_clause","named":true}]},"body":{"multiple":false,"required":true,"types":[{"type":"block","named":true}]},"condition":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}}},{"type":"wildcard_import","named":true,"fields":{}},{"type":"with_clause","named":true,"fields":{},"children":{"multiple":true,"required":true,"types":[{"type":"with_item","named":true}]}},{"type":"with_item","named":true,"fields":{"value":{"multiple":false,"required":true,"types":[{"type":"expression","named":true}]}}},{"type":"with_statement","named":true,"fields":{"body":{"multiple":false,"required":true,"types":[{"type":"block","named":true}]}},"children":{"multiple":false,"required":true,"types":[{"type":"with_clause","named":true}]}},{"type":"yield","named":true,"fields":{},"children":{"multiple":false,"required":false,"types":[{"type":"expression","named":true},{"type":"expression_list","named":true}]}},{"type":"!=","named":false},{"type":"%","named":false},{"type":"%=","named":false},{"type":"&","named":false},{"type":"&=","named":false},{"type":"(","named":false},{"type":")","named":false},{"type":"*","named":false},{"type":"**","named":false},{"type":"**=","named":false},{"type":"*=","named":false},{"type":"+","named":false},{"type":"+=","named":false},{"type":",","named":false},{"type":"-","named":false},{"type":"-=","named":false},{"type":"->","named":false},{"type":".","named":false},{"type":"/","named":false},{"type":"//","named":false},{"type":"//=","named":false},{"type":"/=","named":false},{"type":":","named":false},{"type":":=","named":false},{"type":";","named":false},{"type":"<","named":false},{"type":"<<","named":false},{"type":"<<=","named":false},{"type":"<=","named":false},{"type":"<>","named":false},{"type":"=","named":false},{"type":"==","named":false},{"type":">","named":false},{"type":">=","named":false},{"type":">>","named":false},{"type":">>=","named":false},{"type":"@","named":false},{"type":"@=","named":false},{"type":"[","named":false},{"type":"]","named":false},{"type":"^","named":false},{"type":"^=","named":false},{"type":"_","named":false},{"type":"__future__","named":false},{"type":"and","named":false},{"type":"as","named":false},{"type":"assert","named":false},{"type":"async","named":false},{"type":"await","named":false},{"type":"break","named":false},{"type":"case","named":false},{"type":"class","named":false},{"type":"comment","named":true},{"type":"continue","named":false},{"type":"def","named":false},{"type":"del","named":false},{"type":"elif","named":false},{"type":"ellipsis","named":true},{"type":"else","named":false},{"type":"escape_interpolation","named":true},{"type":"escape_sequence","named":true},{"type":"except","named":false},{"type":"except*","named":false},{"type":"exec","named":false},{"type":"false","named":true},{"type":"finally","named":false},{"type":"float","named":true},{"type":"for","named":false},{"type":"from","named":false},{"type":"global","named":false},{"type":"identifier","named":true},{"type":"if","named":false},{"type":"import","named":false},{"type":"in","named":false},{"type":"integer","named":true},{"type":"is","named":false},{"type":"is not","named":false},{"type":"lambda","named":false},{"type":"line_continuation","named":true},{"type":"match","named":false},{"type":"none","named":true},{"type":"nonlocal","named":false},{"type":"not","named":false},{"type":"not in","named":false},{"type":"or","named":false},{"type":"pass","named":false},{"type":"print","named":false},{"type":"raise","named":false},{"type":"return","named":false},{"type":"string_end","named":true},{"type":"string_start","named":true},{"type":"true","named":true},{"type":"try","named":false},{"type":"type","named":false},{"type":"type_conversion","named":true},{"type":"while","named":false},{"type":"with","named":false},{"type":"yield","named":false},{"type":"{","named":false},{"type":"|","named":false},{"type":"|=","named":false},{"type":"}","named":false},{"type":"~","named":false}],"nodeSubclasses":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]}}},"docLength":1,"stripped":"decoded_digits = \"\"\nfor digit in output:\n        decoded_digit_segments = set()\n        for char in digit:\n            decoded_digit_segments.add(decoder[char])\n        if decoded_digit_segments == set(\"abcefg\"):\n            decoded_digits += \"0\"\n        elif decoded_digit_segments == set(\"cf\"):\n            decoded_digits += \"1\"\n        elif decoded_digit_segments == set(\"acdeg\"):\n            decoded_digits += \"2\"\n        elif decoded_digit_segments == set(\"acdfg\"):\n            decoded_digits += \"3\"\n        elif decoded_digit_segments == set(\"bcdf\"):\n            decoded_digits += \"4\"\n        elif decoded_digit_segments == set(\"abdfg\"):\n            decoded_digits += \"5\"\n        elif decoded_digit_segments == set(\"abdefg\"):\n            decoded_digits += \"6\"\n        elif decoded_digit_segments == set(\"acf\"):\n            decoded_digits += \"7\"\n        elif decoded_digit_segments == set(\"abcdefg\"):\n            decoded_digits += \"8\"\n        elif decoded_digit_segments == set(\"abcdfg\"):\n            decoded_digits += \"9\"\nreturn(int(decoded_digits))","length":28,"comment":{"description":"takes an output row and a decoder as input, returning the corresponding integer value. It iterates over each digit in the output row, using the decoder to determine the corresponding integer value for each segment of the digit. The resulting integer is then returned.","params":[{"name":"output","type":"list","value":null,"description":"1x4 matrix of digits that are to be decoded."},{"name":"decoder","type":"str","value":null,"description":"16-digit binary code that is decoded by the function."}],"returns":{"type":"int","description":"an integer representing the decoded digit."}}}]}}}